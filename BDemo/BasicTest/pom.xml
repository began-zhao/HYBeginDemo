<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>BDemo</artifactId>
        <groupId>com.begin</groupId>
        <version>1.0</version>
    </parent>

    <groupId>com.begin</groupId>
    <artifactId>BasicTest</artifactId>
    <name>BasicTest</name>
    <description>BasicTest</description>

    <build>
        <plugins>
            <!--使用Maven构建Docker镜像-->
            <!--添加Docker-maven-plugin依赖-->
            <!--
            executions.execution.phase:此处配置了在maven打包应用时构建docker镜像；
            imageName：用于指定镜像名称，mall-tiny是仓库名称，${project.artifactId}为镜像名称，${project.version}为仓库版本；
            dockerHost：打包后上传到的docker服务器地址；
            baseImage：该应用所依赖的基础镜像，此处为java；
            entryPoint：docker容器启动时执行的命令；
            resources.resource.targetPath：将打包后的资源文件复制到该目录；
            resources.resource.directory：需要复制的文件所在目录，maven打包的应用jar包保存在target目录下面；
            resources.resource.include：需要复制的文件，打包好的应用jar包。
            pushImage :表示推送镜像到仓库
            registryUrl：表示阿里云的docker仓库地址
            -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>1.2.2</version>
                <executions>
                    <execution>
                        <id>build-image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <imageName>${docker.repostory}:${project.version}</imageName>
                    <baseImage>java:8</baseImage>
                    <entryPoint>["java", "-jar","/${project.build.finalName}.jar"]</entryPoint>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                    <serverId>docker-aliyun</serverId>
                    <registryUrl>${docker.repostory}</registryUrl>
                    <pushImage>true</pushImage>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.5.4</version>
                <executions>
                    <execution>
                        <goals>
                            <!--可以把依赖的包都打包到生成的Jar包中-->
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <includeSystemScope>true</includeSystemScope>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
